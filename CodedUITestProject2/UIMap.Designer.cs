// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject2
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Logs a user.
        /// </summary>
        public void LogIn()
        {
            #region Variable Declarations
            WinEdit uIUsernameEdit = this.UILogInMozillaFirefoxWindow.UILogInDocument.UIUsernameEdit;
            WinEdit uIPasswordEdit = this.UILogInMozillaFirefoxWindow.UILogInDocument.UIPasswordEdit;
            WinButton uILOGINButton = this.UILogInMozillaFirefoxWindow.UILogInDocument.UILOGINButton;
            #endregion

            // Type 'krzesimir' in 'Username:' text box
            uIUsernameEdit.Text = this.LogInParams.UIUsernameEditText;

            // Type '{Tab}' in 'Username:' text box
            Keyboard.SendKeys(uIUsernameEdit, this.LogInParams.UIUsernameEditSendKeys, ModifierKeys.None);

            // Type '********' in 'Password:' text box
            Keyboard.SendKeys(uIPasswordEdit, this.LogInParams.UIPasswordEditSendKeys, true);

            // Click 'LOG IN' button
            Mouse.Click(uILOGINButton, new Point(72, 36));
        }
        
        #region Properties
        public virtual LogInParams LogInParams
        {
            get
            {
                if ((this.mLogInParams == null))
                {
                    this.mLogInParams = new LogInParams();
                }
                return this.mLogInParams;
            }
        }
        
        public UILogInMozillaFirefoxWindow UILogInMozillaFirefoxWindow
        {
            get
            {
                if ((this.mUILogInMozillaFirefoxWindow == null))
                {
                    this.mUILogInMozillaFirefoxWindow = new UILogInMozillaFirefoxWindow();
                }
                return this.mUILogInMozillaFirefoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private LogInParams mLogInParams;
        
        private UILogInMozillaFirefoxWindow mUILogInMozillaFirefoxWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogIn'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class LogInParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'krzesimir' in 'Username:' text box
        /// </summary>
        public string UIUsernameEditText = "krzesimir";
        
        /// <summary>
        /// Type '{Tab}' in 'Username:' text box
        /// </summary>
        public string UIUsernameEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "HFUQZftV+VmnTkxjKLeFkqcArDgkwCT8eujoM1Bzoh4=";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILogInMozillaFirefoxWindow : WinWindow
    {
        
        public UILogInMozillaFirefoxWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Log In - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Log In - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UILogInDocument UILogInDocument
        {
            get
            {
                if ((this.mUILogInDocument == null))
                {
                    this.mUILogInDocument = new UILogInDocument(this);
                }
                return this.mUILogInDocument;
            }
        }
        #endregion
        
        #region Fields
        private UILogInDocument mUILogInDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILogInDocument : WinControl
    {
        
        public UILogInDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log In";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Log In - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Username:";
                    this.mUIUsernameEdit.WindowTitles.Add("Log In - Mozilla Firefox");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public WinEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password:";
                    this.mUIPasswordEdit.WindowTitles.Add("Log In - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public WinButton UILOGINButton
        {
            get
            {
                if ((this.mUILOGINButton == null))
                {
                    this.mUILOGINButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILOGINButton.SearchProperties[WinButton.PropertyNames.Name] = "LOG IN";
                    this.mUILOGINButton.WindowTitles.Add("Log In - Mozilla Firefox");
                    #endregion
                }
                return this.mUILOGINButton;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUsernameEdit;
        
        private WinEdit mUIPasswordEdit;
        
        private WinButton mUILOGINButton;
        #endregion
    }
}
