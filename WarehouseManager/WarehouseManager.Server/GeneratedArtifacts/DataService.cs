//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Inserting(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Inserted(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Updating(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Updated(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Deleting(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Deleted(global::LightSwitchApplication.Table1Item entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Validate(global::LightSwitchApplication.Table1Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Table1Items_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>
                __Table1ItemsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Table1Item>(
                    "Table1Items",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Table1Items_Filter);
            private static bool __Table1Items_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanInsert(ref result);
                return result;
            }
            private static bool __Table1Items_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanUpdate(ref result);
                return result;
            }
            private static bool __Table1Items_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanDelete(ref result);
                return result;
            }
            private static bool __Table1Items_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Table1Items_CanRead(ref result);
                return result;
            }
            private static void __Table1Items_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Inserting(e);
            }
            private static void __Table1Items_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Inserted(e);
            }
            private static void __Table1Items_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Updating(e);
            }
            private static void __Table1Items_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Updated(e);
            }
            private static void __Table1Items_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Deleting(e);
            }
            private static void __Table1Items_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e)
            {
                d.Table1Items_Deleted(e);
            }
            private static void __Table1Items_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Table1Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Table1Items_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> __Table1Items_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Table1Item, bool>> filter = null;
                d.Table1Items_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    /// <summary>
    /// Provides members to query and update data in the WMSData datasource.
    /// </summary>
    public sealed partial class WMSDataService
        : global::LightSwitchApplication.WMSData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public WMSDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_Inserting(global::LightSwitchApplication.Book entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_Inserted(global::LightSwitchApplication.Book entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_Updating(global::LightSwitchApplication.Book entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_Updated(global::LightSwitchApplication.Book entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_Deleting(global::LightSwitchApplication.Book entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_Deleted(global::LightSwitchApplication.Book entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_Validate(global::LightSwitchApplication.Book entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Books_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Book, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_Inserting(global::LightSwitchApplication.BooksForDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_Inserted(global::LightSwitchApplication.BooksForDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_Updating(global::LightSwitchApplication.BooksForDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_Updated(global::LightSwitchApplication.BooksForDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_Deleting(global::LightSwitchApplication.BooksForDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_Deleted(global::LightSwitchApplication.BooksForDocument entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_Validate(global::LightSwitchApplication.BooksForDocument entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void BooksForDocuments_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BooksForDocument, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_Inserting(global::LightSwitchApplication.Bookstore entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_Inserted(global::LightSwitchApplication.Bookstore entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_Updating(global::LightSwitchApplication.Bookstore entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_Updated(global::LightSwitchApplication.Bookstore entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_Deleting(global::LightSwitchApplication.Bookstore entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_Deleted(global::LightSwitchApplication.Bookstore entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_Validate(global::LightSwitchApplication.Bookstore entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Bookstores_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bookstore, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Inserting(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Inserted(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Updating(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Updated(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Deleting(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Deleted(global::LightSwitchApplication.Document entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Validate(global::LightSwitchApplication.Document entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Documents_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Document, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_Inserting(global::LightSwitchApplication.Owner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_Inserted(global::LightSwitchApplication.Owner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_Updating(global::LightSwitchApplication.Owner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_Updated(global::LightSwitchApplication.Owner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_Deleting(global::LightSwitchApplication.Owner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_Deleted(global::LightSwitchApplication.Owner entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_Validate(global::LightSwitchApplication.Owner entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Owners_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Owner, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_Inserting(global::LightSwitchApplication.Shelf entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_Inserted(global::LightSwitchApplication.Shelf entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_Updating(global::LightSwitchApplication.Shelf entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_Updated(global::LightSwitchApplication.Shelf entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_Deleting(global::LightSwitchApplication.Shelf entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_Deleted(global::LightSwitchApplication.Shelf entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_Validate(global::LightSwitchApplication.Shelf entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Shelves_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Shelf, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_Inserting(global::LightSwitchApplication.Warehouse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_Inserted(global::LightSwitchApplication.Warehouse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_Updating(global::LightSwitchApplication.Warehouse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_Updated(global::LightSwitchApplication.Warehouse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_Deleting(global::LightSwitchApplication.Warehouse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_Deleted(global::LightSwitchApplication.Warehouse entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_Validate(global::LightSwitchApplication.Warehouse entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Warehouses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Warehouse, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Book>
                __BooksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Book>(
                    "Books",
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_CanInsert,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_CanUpdate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_CanDelete,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_CanRead,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_Inserting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_Inserted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_Updating,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_Updated,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_Deleting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_Deleted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_Validate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Books_Filter);
            private static bool __Books_CanInsert(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Books_CanInsert(ref result);
                return result;
            }
            private static bool __Books_CanUpdate(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Books_CanUpdate(ref result);
                return result;
            }
            private static bool __Books_CanDelete(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Books_CanDelete(ref result);
                return result;
            }
            private static bool __Books_CanRead(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Books_CanRead(ref result);
                return result;
            }
            private static void __Books_Inserting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Book e)
            {
                d.Books_Inserting(e);
            }
            private static void __Books_Inserted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Book e)
            {
                d.Books_Inserted(e);
            }
            private static void __Books_Updating(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Book e)
            {
                d.Books_Updating(e);
            }
            private static void __Books_Updated(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Book e)
            {
                d.Books_Updated(e);
            }
            private static void __Books_Deleting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Book e)
            {
                d.Books_Deleting(e);
            }
            private static void __Books_Deleted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Book e)
            {
                d.Books_Deleted(e);
            }
            private static void __Books_Validate(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Book e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Books_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Book, bool>> __Books_Filter(global::LightSwitchApplication.WMSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Book, bool>> filter = null;
                d.Books_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.BooksForDocument>
                __BooksForDocumentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.BooksForDocument>(
                    "BooksForDocuments",
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_CanInsert,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_CanUpdate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_CanDelete,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_CanRead,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_Inserting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_Inserted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_Updating,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_Updated,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_Deleting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_Deleted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_Validate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__BooksForDocuments_Filter);
            private static bool __BooksForDocuments_CanInsert(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.BooksForDocuments_CanInsert(ref result);
                return result;
            }
            private static bool __BooksForDocuments_CanUpdate(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.BooksForDocuments_CanUpdate(ref result);
                return result;
            }
            private static bool __BooksForDocuments_CanDelete(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.BooksForDocuments_CanDelete(ref result);
                return result;
            }
            private static bool __BooksForDocuments_CanRead(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.BooksForDocuments_CanRead(ref result);
                return result;
            }
            private static void __BooksForDocuments_Inserting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.BooksForDocument e)
            {
                d.BooksForDocuments_Inserting(e);
            }
            private static void __BooksForDocuments_Inserted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.BooksForDocument e)
            {
                d.BooksForDocuments_Inserted(e);
            }
            private static void __BooksForDocuments_Updating(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.BooksForDocument e)
            {
                d.BooksForDocuments_Updating(e);
            }
            private static void __BooksForDocuments_Updated(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.BooksForDocument e)
            {
                d.BooksForDocuments_Updated(e);
            }
            private static void __BooksForDocuments_Deleting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.BooksForDocument e)
            {
                d.BooksForDocuments_Deleting(e);
            }
            private static void __BooksForDocuments_Deleted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.BooksForDocument e)
            {
                d.BooksForDocuments_Deleted(e);
            }
            private static void __BooksForDocuments_Validate(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.BooksForDocument e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.BooksForDocuments_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BooksForDocument, bool>> __BooksForDocuments_Filter(global::LightSwitchApplication.WMSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.BooksForDocument, bool>> filter = null;
                d.BooksForDocuments_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Bookstore>
                __BookstoresEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Bookstore>(
                    "Bookstores",
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_CanInsert,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_CanUpdate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_CanDelete,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_CanRead,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_Inserting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_Inserted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_Updating,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_Updated,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_Deleting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_Deleted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_Validate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Bookstores_Filter);
            private static bool __Bookstores_CanInsert(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Bookstores_CanInsert(ref result);
                return result;
            }
            private static bool __Bookstores_CanUpdate(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Bookstores_CanUpdate(ref result);
                return result;
            }
            private static bool __Bookstores_CanDelete(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Bookstores_CanDelete(ref result);
                return result;
            }
            private static bool __Bookstores_CanRead(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Bookstores_CanRead(ref result);
                return result;
            }
            private static void __Bookstores_Inserting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Bookstore e)
            {
                d.Bookstores_Inserting(e);
            }
            private static void __Bookstores_Inserted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Bookstore e)
            {
                d.Bookstores_Inserted(e);
            }
            private static void __Bookstores_Updating(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Bookstore e)
            {
                d.Bookstores_Updating(e);
            }
            private static void __Bookstores_Updated(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Bookstore e)
            {
                d.Bookstores_Updated(e);
            }
            private static void __Bookstores_Deleting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Bookstore e)
            {
                d.Bookstores_Deleting(e);
            }
            private static void __Bookstores_Deleted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Bookstore e)
            {
                d.Bookstores_Deleted(e);
            }
            private static void __Bookstores_Validate(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Bookstore e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Bookstores_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bookstore, bool>> __Bookstores_Filter(global::LightSwitchApplication.WMSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Bookstore, bool>> filter = null;
                d.Bookstores_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Document>
                __DocumentsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Document>(
                    "Documents",
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_CanInsert,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_CanUpdate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_CanDelete,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_CanRead,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_Inserting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_Inserted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_Updating,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_Updated,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_Deleting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_Deleted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_Validate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Documents_Filter);
            private static bool __Documents_CanInsert(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Documents_CanInsert(ref result);
                return result;
            }
            private static bool __Documents_CanUpdate(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Documents_CanUpdate(ref result);
                return result;
            }
            private static bool __Documents_CanDelete(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Documents_CanDelete(ref result);
                return result;
            }
            private static bool __Documents_CanRead(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Documents_CanRead(ref result);
                return result;
            }
            private static void __Documents_Inserting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Inserting(e);
            }
            private static void __Documents_Inserted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Inserted(e);
            }
            private static void __Documents_Updating(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Updating(e);
            }
            private static void __Documents_Updated(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Updated(e);
            }
            private static void __Documents_Deleting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Deleting(e);
            }
            private static void __Documents_Deleted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Document e)
            {
                d.Documents_Deleted(e);
            }
            private static void __Documents_Validate(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Document e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Documents_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Document, bool>> __Documents_Filter(global::LightSwitchApplication.WMSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Document, bool>> filter = null;
                d.Documents_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Owner>
                __OwnersEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Owner>(
                    "Owners",
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_CanInsert,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_CanUpdate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_CanDelete,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_CanRead,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_Inserting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_Inserted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_Updating,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_Updated,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_Deleting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_Deleted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_Validate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Owners_Filter);
            private static bool __Owners_CanInsert(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Owners_CanInsert(ref result);
                return result;
            }
            private static bool __Owners_CanUpdate(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Owners_CanUpdate(ref result);
                return result;
            }
            private static bool __Owners_CanDelete(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Owners_CanDelete(ref result);
                return result;
            }
            private static bool __Owners_CanRead(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Owners_CanRead(ref result);
                return result;
            }
            private static void __Owners_Inserting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Owner e)
            {
                d.Owners_Inserting(e);
            }
            private static void __Owners_Inserted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Owner e)
            {
                d.Owners_Inserted(e);
            }
            private static void __Owners_Updating(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Owner e)
            {
                d.Owners_Updating(e);
            }
            private static void __Owners_Updated(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Owner e)
            {
                d.Owners_Updated(e);
            }
            private static void __Owners_Deleting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Owner e)
            {
                d.Owners_Deleting(e);
            }
            private static void __Owners_Deleted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Owner e)
            {
                d.Owners_Deleted(e);
            }
            private static void __Owners_Validate(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Owner e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Owners_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Owner, bool>> __Owners_Filter(global::LightSwitchApplication.WMSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Owner, bool>> filter = null;
                d.Owners_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Shelf>
                __ShelvesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Shelf>(
                    "Shelves",
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_CanInsert,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_CanUpdate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_CanDelete,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_CanRead,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_Inserting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_Inserted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_Updating,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_Updated,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_Deleting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_Deleted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_Validate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Shelves_Filter);
            private static bool __Shelves_CanInsert(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Shelves_CanInsert(ref result);
                return result;
            }
            private static bool __Shelves_CanUpdate(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Shelves_CanUpdate(ref result);
                return result;
            }
            private static bool __Shelves_CanDelete(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Shelves_CanDelete(ref result);
                return result;
            }
            private static bool __Shelves_CanRead(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Shelves_CanRead(ref result);
                return result;
            }
            private static void __Shelves_Inserting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Shelf e)
            {
                d.Shelves_Inserting(e);
            }
            private static void __Shelves_Inserted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Shelf e)
            {
                d.Shelves_Inserted(e);
            }
            private static void __Shelves_Updating(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Shelf e)
            {
                d.Shelves_Updating(e);
            }
            private static void __Shelves_Updated(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Shelf e)
            {
                d.Shelves_Updated(e);
            }
            private static void __Shelves_Deleting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Shelf e)
            {
                d.Shelves_Deleting(e);
            }
            private static void __Shelves_Deleted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Shelf e)
            {
                d.Shelves_Deleted(e);
            }
            private static void __Shelves_Validate(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Shelf e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Shelves_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Shelf, bool>> __Shelves_Filter(global::LightSwitchApplication.WMSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Shelf, bool>> filter = null;
                d.Shelves_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Warehouse>
                __WarehousesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.WMSDataService, global::LightSwitchApplication.Warehouse>(
                    "Warehouses",
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_CanInsert,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_CanUpdate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_CanDelete,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_CanRead,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_Inserting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_Inserted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_Updating,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_Updated,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_Deleting,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_Deleted,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_Validate,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Warehouses_Filter);
            private static bool __Warehouses_CanInsert(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Warehouses_CanInsert(ref result);
                return result;
            }
            private static bool __Warehouses_CanUpdate(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Warehouses_CanUpdate(ref result);
                return result;
            }
            private static bool __Warehouses_CanDelete(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Warehouses_CanDelete(ref result);
                return result;
            }
            private static bool __Warehouses_CanRead(global::LightSwitchApplication.WMSDataService d)
            {
                bool result = true;
                d.Warehouses_CanRead(ref result);
                return result;
            }
            private static void __Warehouses_Inserting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Warehouse e)
            {
                d.Warehouses_Inserting(e);
            }
            private static void __Warehouses_Inserted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Warehouse e)
            {
                d.Warehouses_Inserted(e);
            }
            private static void __Warehouses_Updating(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Warehouse e)
            {
                d.Warehouses_Updating(e);
            }
            private static void __Warehouses_Updated(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Warehouse e)
            {
                d.Warehouses_Updated(e);
            }
            private static void __Warehouses_Deleting(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Warehouse e)
            {
                d.Warehouses_Deleting(e);
            }
            private static void __Warehouses_Deleted(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Warehouse e)
            {
                d.Warehouses_Deleted(e);
            }
            private static void __Warehouses_Validate(global::LightSwitchApplication.WMSDataService d, global::LightSwitchApplication.Warehouse e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Warehouses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Warehouse, bool>> __Warehouses_Filter(global::LightSwitchApplication.WMSDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Warehouse, bool>> filter = null;
                d.Warehouses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.WMSDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.WMSDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.WMSDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.WMSDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.WMSDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.WMSDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.WMSDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.WMSDataService>(
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.WMSDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.WMSDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.WMSDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.WMSDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
