// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject3
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Log in user
        /// </summary>
        public void LogInTest()
        {
            #region Variable Declarations
            WinEdit uIUsernameEdit = this.UILogInMozillaFirefoxWindow.UILogInDocument.UIUsernameEdit;
            WinEdit uIPasswordEdit = this.UILogInMozillaFirefoxWindow.UILogInDocument.UIPasswordEdit;
            WinButton uILOGINButton = this.UILogInMozillaFirefoxWindow.UILogInDocument.UILOGINButton;
            #endregion

            // Type 'krzesimir' in 'Username:' text box
            uIUsernameEdit.Text = this.LogInTestParams.UIUsernameEditText;

            // Type '********' in 'Password:' text box
            Keyboard.SendKeys(uIPasswordEdit, this.LogInTestParams.UIPasswordEditSendKeys, ModifierKeys.Control, true);

            // Click 'LOG IN' button
            Mouse.Click(uILOGINButton, new Point(102, 10));
        }
        
        /// <summary>
        /// Checks if user is logged in
        /// </summary>
        public void LogInCheck()
        {
            #region Variable Declarations
            WinEdit uIBrowseBooksEdit = this.UILogInMozillaFirefoxWindow.UIBrowseBooksDocument.UIBrowseBooksEdit;
            #endregion

            // Verify that the 'Name' property of 'Browse Books' text box equals 'Browse Books'
            Assert.AreEqual(this.LogInCheckExpectedValues.UIBrowseBooksEditName, uIBrowseBooksEdit.Name, "Login failed");
        }
        
        #region Properties
        public virtual LogInTestParams LogInTestParams
        {
            get
            {
                if ((this.mLogInTestParams == null))
                {
                    this.mLogInTestParams = new LogInTestParams();
                }
                return this.mLogInTestParams;
            }
        }
        
        public virtual LogInCheckExpectedValues LogInCheckExpectedValues
        {
            get
            {
                if ((this.mLogInCheckExpectedValues == null))
                {
                    this.mLogInCheckExpectedValues = new LogInCheckExpectedValues();
                }
                return this.mLogInCheckExpectedValues;
            }
        }
        
        public UILogInMozillaFirefoxWindow UILogInMozillaFirefoxWindow
        {
            get
            {
                if ((this.mUILogInMozillaFirefoxWindow == null))
                {
                    this.mUILogInMozillaFirefoxWindow = new UILogInMozillaFirefoxWindow();
                }
                return this.mUILogInMozillaFirefoxWindow;
            }
        }
        #endregion
        
        #region Fields
        private LogInTestParams mLogInTestParams;
        
        private LogInCheckExpectedValues mLogInCheckExpectedValues;
        
        private UILogInMozillaFirefoxWindow mUILogInMozillaFirefoxWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogInTest'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class LogInTestParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'krzesimir' in 'Username:' text box
        /// </summary>
        public string UIUsernameEditText = "krzesimir";
        
        /// <summary>
        /// Type '********' in 'Password:' text box
        /// </summary>
        public string UIPasswordEditSendKeys = "GY/4yFKgxsVCEilbOvhsUw==";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'LogInCheck'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class LogInCheckExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Browse Books' text box equals 'Browse Books'
        /// </summary>
        public string UIBrowseBooksEditName = "Browse Books";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILogInMozillaFirefoxWindow : WinWindow
    {
        
        public UILogInMozillaFirefoxWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Log In - Mozilla Firefox";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MozillaWindowClass";
            this.WindowTitles.Add("Log In - Mozilla Firefox");
            this.WindowTitles.Add("Browse Books - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public UILogInDocument UILogInDocument
        {
            get
            {
                if ((this.mUILogInDocument == null))
                {
                    this.mUILogInDocument = new UILogInDocument(this);
                }
                return this.mUILogInDocument;
            }
        }
        
        public UIBrowseBooksDocument UIBrowseBooksDocument
        {
            get
            {
                if ((this.mUIBrowseBooksDocument == null))
                {
                    this.mUIBrowseBooksDocument = new UIBrowseBooksDocument(this);
                }
                return this.mUIBrowseBooksDocument;
            }
        }
        #endregion
        
        #region Fields
        private UILogInDocument mUILogInDocument;
        
        private UIBrowseBooksDocument mUIBrowseBooksDocument;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UILogInDocument : WinControl
    {
        
        public UILogInDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Log In";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Log In - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIUsernameEdit
        {
            get
            {
                if ((this.mUIUsernameEdit == null))
                {
                    this.mUIUsernameEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIUsernameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Username:";
                    this.mUIUsernameEdit.WindowTitles.Add("Log In - Mozilla Firefox");
                    #endregion
                }
                return this.mUIUsernameEdit;
            }
        }
        
        public WinEdit UIPasswordEdit
        {
            get
            {
                if ((this.mUIPasswordEdit == null))
                {
                    this.mUIPasswordEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Password:";
                    this.mUIPasswordEdit.WindowTitles.Add("Log In - Mozilla Firefox");
                    #endregion
                }
                return this.mUIPasswordEdit;
            }
        }
        
        public WinButton UILOGINButton
        {
            get
            {
                if ((this.mUILOGINButton == null))
                {
                    this.mUILOGINButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILOGINButton.SearchProperties[WinButton.PropertyNames.Name] = "LOG IN";
                    this.mUILOGINButton.WindowTitles.Add("Log In - Mozilla Firefox");
                    #endregion
                }
                return this.mUILOGINButton;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIUsernameEdit;
        
        private WinEdit mUIPasswordEdit;
        
        private WinButton mUILOGINButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIBrowseBooksDocument : WinControl
    {
        
        public UIBrowseBooksDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Browse Books";
            this.SearchProperties[UITestControl.PropertyNames.ControlType] = "Document";
            this.WindowTitles.Add("Browse Books - Mozilla Firefox");
            #endregion
        }
        
        #region Properties
        public WinEdit UIBrowseBooksEdit
        {
            get
            {
                if ((this.mUIBrowseBooksEdit == null))
                {
                    this.mUIBrowseBooksEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIBrowseBooksEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Browse Books";
                    this.mUIBrowseBooksEdit.WindowTitles.Add("Browse Books - Mozilla Firefox");
                    #endregion
                }
                return this.mUIBrowseBooksEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIBrowseBooksEdit;
        #endregion
    }
}
